plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.17.2'
    id "org.sonarqube" version "4.4.1.3373"
    id 'jacoco'
    id "net.ltgt.errorprone" version "3.1.0"
    id "com.diffplug.spotless" version "6.23.3"
}

group 'no.hvl.tk'
version '2.3.0'

repositories {
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/net.sourceforge.plantuml/plantuml
    implementation group: 'net.sourceforge.plantuml', name: 'plantuml', version: '1.2023.10'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // Websocket server and server container dependencies
    // https://mvnrepository.com/artifact/jakarta.websocket/jakarta.websocket-api
    compileOnly group: 'jakarta.websocket', name: 'jakarta.websocket-api', version: '2.1.1'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '2.1.4'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-container-grizzly-server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly-server', version: '2.1.4'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    testImplementation 'org.mockito:mockito-core:5.7.0'


    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    // https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.1'

    errorprone("com.google.errorprone:error_prone_core:2.16")
}

intellij {
    version = '2024.1'
    plugins = ['java']
}

patchPluginXml {
    changeNotes = """Fix loading children not working bug and internal improvements."""
}

test {
    useJUnitPlatform()
    jacoco {
        includeNoLocationClasses = true
        excludes = ["jdk.internal.*"]
    }
}

tasks.runIde {
    jvmArgs("--add-exports", "java.base/jdk.internal.vm=ALL-UNNAMED")
}

tasks.named('sonar').configure {
    dependsOn jacocoTestReport
}

spotless {
    java {
        googleJavaFormat()
        formatAnnotations()
    }
}

jacocoTestReport {
    classDirectories.setFrom(instrumentCode)
    reports {
        xml.required = true
    }
}

jacocoTestCoverageVerification {
    classDirectories.setFrom(instrumentCode)
}

sonar {
    properties {
        property "sonar.projectKey", "timKraeuter_VisualDebugger"
        property "sonar.organization", "timkraeuter"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.compileTestJava {
    // Ignore manuel tests.
    options.errorprone.excludedPaths = ".*/manueltests/.*"
}
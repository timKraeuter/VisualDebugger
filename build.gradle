plugins {
    id 'java'
    id 'org.jetbrains.intellij.platform' version '2.5.0'
    id 'org.sonarqube' version '5.1.0.4882'
    id 'jacoco'
    id 'net.ltgt.errorprone' version '4.0.1'
    id 'com.diffplug.spotless' version '6.25.0'
}

group 'no.hvl.tk'
version '2.3.6'

java {
    sourceCompatibility = JavaVersion.VERSION_21
}

repositories {
    mavenCentral()
    intellijPlatform {
        defaultRepositories()
    }
}

dependencies {
    intellijPlatform {
        instrumentationTools()
        intellijIdeaCommunity('2024.2')
        bundledPlugin('com.intellij.java')
    }

    // https://mvnrepository.com/artifact/net.sourceforge.plantuml/plantuml
    implementation group: 'net.sourceforge.plantuml', name: 'plantuml', version: '1.2023.10'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    // Websocket server and server container dependencies
    // https://mvnrepository.com/artifact/jakarta.websocket/jakarta.websocket-api
    compileOnly group: 'jakarta.websocket', name: 'jakarta.websocket-api', version: '2.1.1'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-server', version: '2.2.0'
    // https://mvnrepository.com/artifact/org.glassfish.tyrus/tyrus-container-grizzly-server
    implementation group: 'org.glassfish.tyrus', name: 'tyrus-container-grizzly-server', version: '2.2.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.0'
    testImplementation 'org.hamcrest:hamcrest:3.0'
    testImplementation 'org.mockito:mockito-core:5.7.0'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.1'

    errorprone('com.google.errorprone:error_prone_core:2.16')
}

patchPluginXml {
    changeNotes = '''Update to 2025.2'''
    untilBuild.set("252.*")
}

test {
    useJUnitPlatform()
    jacoco {
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}

tasks.runIde {
    jvmArgs('--add-exports', 'java.base/jdk.internal.vm=ALL-UNNAMED')
}

tasks.named('sonar').configure {
    dependsOn jacocoTestReport
}

spotless {
    java {
        googleJavaFormat()
        formatAnnotations()
    }
}

jacocoTestReport {
    classDirectories.setFrom(instrumentCode)
    reports {
        xml.required = true
    }
}

jacocoTestCoverageVerification {
    classDirectories.setFrom(instrumentCode)
}

sonar {
    properties {
        property 'sonar.projectKey', 'timKraeuter_VisualDebugger'
        property 'sonar.organization', 'timkraeuter'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

tasks.compileTestJava {
    // Ignore manuel tests.
    options.errorprone.excludedPaths = '.*/manueltests/.*'
}